{
    "info": {
      "name": "SecureOps API",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "_exporter_id": "12345678"
    },
    "item": [
      {
        "name": "Auth",
        "item": [
          {
            "name": "Register User",
            "request": {
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"fullName\": \"Test User\",\n    \"email\": \"test@example.com\",\n    \"password\": \"password123\"\n}"
              },
              "url": {
                "raw": "{{baseUrl}}/api/auth/register",
                "host": ["{{baseUrl}}"],
                "path": ["api", "auth", "register"]
              },
              "description": "Register a new user (approval pending)"
            },
            "response": []
          },
          {
            "name": "Register Admin",
            "request": {
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"fullName\": \"Admin User\",\n    \"email\": \"admin@example.com\",\n    \"password\": \"admin123\"\n}"
              },
              "url": {
                "raw": "{{baseUrl}}/api/auth/register",
                "host": ["{{baseUrl}}"],
                "path": ["api", "auth", "register"]
              },
              "description": "Register an admin user (needs manual role update in db)"
            },
            "response": []
          },
          {
            "name": "Login",
            "event": [
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "var jsonData = JSON.parse(responseBody);",
                    "pm.collectionVariables.set(\"authToken\", jsonData.accessToken);"
                  ],
                  "type": "text/javascript"
                }
              }
            ],
            "request": {
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"email\": \"admin@example.com\",\n    \"password\": \"admin123\"\n}"
              },
              "url": {
                "raw": "{{baseUrl}}/api/auth/login",
                "host": ["{{baseUrl}}"],
                "path": ["api", "auth", "login"]
              },
              "description": "Login with user credentials"
            },
            "response": []
          }
        ],
        "description": "Authentication endpoints"
      },
      {
        "name": "Users",
        "item": [
          {
            "name": "Get Current User",
            "request": {
              "method": "GET",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{authToken}}"
                }
              ],
              "url": {
                "raw": "{{baseUrl}}/api/users/me",
                "host": ["{{baseUrl}}"],
                "path": ["api", "users", "me"]
              },
              "description": "Get the current logged-in user"
            },
            "response": []
          },
          {
            "name": "Get Pending Approvals",
            "request": {
              "method": "GET",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{authToken}}"
                }
              ],
              "url": {
                "raw": "{{baseUrl}}/api/users/pending",
                "host": ["{{baseUrl}}"],
                "path": ["api", "users", "pending"]
              },
              "description": "Get all users pending approval (admin only)"
            },
            "response": []
          },
          {
            "name": "Approve User",
            "request": {
              "method": "PUT",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{authToken}}"
                }
              ],
              "url": {
                "raw": "{{baseUrl}}/api/users/1/approve",
                "host": ["{{baseUrl}}"],
                "path": ["api", "users", "1", "approve"]
              },
              "description": "Approve a user by ID (admin only)"
            },
            "response": []
          },
          {
            "name": "Reject User",
            "request": {
              "method": "PUT",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{authToken}}"
                }
              ],
              "url": {
                "raw": "{{baseUrl}}/api/users/1/reject",
                "host": ["{{baseUrl}}"],
                "path": ["api", "users", "1", "reject"]
              },
              "description": "Reject a user by ID (admin only)"
            },
            "response": []
          },
          {
            "name": "Get All Users",
            "request": {
              "method": "GET",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{authToken}}"
                }
              ],
              "url": {
                "raw": "{{baseUrl}}/api/users",
                "host": ["{{baseUrl}}"],
                "path": ["api", "users"]
              },
              "description": "Get all users (admin only)"
            },
            "response": []
          }
        ],
        "description": "User management endpoints"
      },
      {
        "name": "Calendars",
        "item": [
          {
            "name": "Create Calendar",
            "request": {
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Authorization",
                  "value": "Bearer {{authToken}}"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"name\": \"Work Calendar\",\n    \"color\": \"#ff5733\",\n    \"isPrimary\": false\n}"
              },
              "url": {
                "raw": "{{baseUrl}}/api/calendars",
                "host": ["{{baseUrl}}"],
                "path": ["api", "calendars"]
              },
              "description": "Create a new calendar"
            },
            "response": []
          },
          {
            "name": "Get User Calendars",
            "request": {
              "method": "GET",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{authToken}}"
                }
              ],
              "url": {
                "raw": "{{baseUrl}}/api/calendars",
                "host": ["{{baseUrl}}"],
                "path": ["api", "calendars"]
              },
              "description": "Get all calendars for the current user"
            },
            "response": []
          },
          {
            "name": "Get Calendar by ID",
            "request": {
              "method": "GET",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{authToken}}"
                }
              ],
              "url": {
                "raw": "{{baseUrl}}/api/calendars/1",
                "host": ["{{baseUrl}}"],
                "path": ["api", "calendars", "1"]
              },
              "description": "Get a specific calendar by ID"
            },
            "response": []
          },
          {
            "name": "Update Calendar",
            "request": {
              "method": "PUT",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Authorization",
                  "value": "Bearer {{authToken}}"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"name\": \"Updated Calendar\",\n    \"color\": \"#33ff57\",\n    \"isPrimary\": false\n}"
              },
              "url": {
                "raw": "{{baseUrl}}/api/calendars/2",
                "host": ["{{baseUrl}}"],
                "path": ["api", "calendars", "2"]
              },
              "description": "Update a calendar by ID"
            },
            "response": []
          },
          {
            "name": "Delete Calendar",
            "request": {
              "method": "DELETE",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{authToken}}"
                }
              ],
              "url": {
                "raw": "{{baseUrl}}/api/calendars/2",
                "host": ["{{baseUrl}}"],
                "path": ["api", "calendars", "2"]
              },
              "description": "Delete a calendar by ID (cannot delete primary calendar)"
            },
            "response": []
          }
        ],
        "description": "Calendar management endpoints"
      },
      {
        "name": "Events",
        "item": [
          {
            "name": "Create Event",
            "request": {
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Authorization",
                  "value": "Bearer {{authToken}}"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"title\": \"Team Meeting\",\n    \"description\": \"Weekly team sync-up\",\n    \"startTime\": \"2025-04-10T09:00:00.000Z\",\n    \"endTime\": \"2025-04-10T10:00:00.000Z\",\n    \"isAllDay\": false,\n    \"location\": \"Conference Room A\",\n    \"calendarId\": 1\n}"
              },
              "url": {
                "raw": "{{baseUrl}}/api/events",
                "host": ["{{baseUrl}}"],
                "path": ["api", "events"]
              },
              "description": "Create a new event"
            },
            "response": []
          },
          {
            "name": "Get Calendar Events",
            "request": {
              "method": "GET",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{authToken}}"
                }
              ],
              "url": {
                "raw": "{{baseUrl}}/api/events?calendarId=1",
                "host": ["{{baseUrl}}"],
                "path": ["api", "events"],
                "query": [
                  {
                    "key": "calendarId",
                    "value": "1"
                  }
                ]
              },
              "description": "Get all events for a specific calendar"
            },
            "response": []
          },
          {
            "name": "Get Events by Date Range",
            "request": {
              "method": "GET",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{authToken}}"
                }
              ],
              "url": {
                "raw": "{{baseUrl}}/api/events/range?calendarId=1&startDate=2025-04-01&endDate=2025-04-30",
                "host": ["{{baseUrl}}"],
                "path": ["api", "events", "range"],
                "query": [
                  {
                    "key": "calendarId",
                    "value": "1"
                  },
                  {
                    "key": "startDate",
                    "value": "2025-04-01"
                  },
                  {
                    "key": "endDate",
                    "value": "2025-04-30"
                  }
                ]
              },
              "description": "Get events for a specific calendar within a date range"
            },
            "response": []
          },
          {
            "name": "Get Event by ID",
            "request": {
              "method": "GET",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{authToken}}"
                }
              ],
              "url": {
                "raw": "{{baseUrl}}/api/events/1",
                "host": ["{{baseUrl}}"],
                "path": ["api", "events", "1"]
              },
              "description": "Get a specific event by ID"
            },
            "response": []
          },
          {
            "name": "Update Event",
            "request": {
              "method": "PUT",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Authorization",
                  "value": "Bearer {{authToken}}"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"title\": \"Updated Team Meeting\",\n    \"description\": \"Weekly team sync-up - Updated\",\n    \"startTime\": \"2025-04-10T10:00:00.000Z\",\n    \"endTime\": \"2025-04-10T11:00:00.000Z\",\n    \"isAllDay\": false,\n    \"location\": \"Conference Room B\",\n    \"calendarId\": 1\n}"
              },
              "url": {
                "raw": "{{baseUrl}}/api/events/1",
                "host": ["{{baseUrl}}"],
                "path": ["api", "events", "1"]
              },
              "description": "Update an event by ID"
            },
            "response": []
          },
          {
            "name": "Delete Event",
            "request": {
              "method": "DELETE",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{authToken}}"
                }
              ],
              "url": {
                "raw": "{{baseUrl}}/api/events/1",
                "host": ["{{baseUrl}}"],
                "path": ["api", "events", "1"]
              },
              "description": "Delete an event by ID"
            },
            "response": []
          }
        ],
        "description": "Event management endpoints"
      },
      {
        "name": "Chat",
        "item": [
          {
            "name": "Create Chat",
            "request": {
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Authorization",
                  "value": "Bearer {{authToken}}"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"title\": \"Project Discussion\",\n    \"participants\": [1, 2]\n}"
              },
              "url": {
                "raw": "{{baseUrl}}/api/chats",
                "host": ["{{baseUrl}}"],
                "path": ["api", "chats"]
              },
              "description": "Create a new chat with participants"
            },
            "response": []
          },
          {
            "name": "Get User Chats",
            "request": {
              "method": "GET",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{authToken}}"
                }
              ],
              "url": {
                "raw": "{{baseUrl}}/api/chats",
                "host": ["{{baseUrl}}"],
                "path": ["api", "chats"]
              },
              "description": "Get all chats for the current user"
            },
            "response": []
          },
          {
            "name": "Get Chat by ID",
            "request": {
              "method": "GET",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{authToken}}"
                }
              ],
              "url": {
                "raw": "{{baseUrl}}/api/chats/1",
                "host": ["{{baseUrl}}"],
                "path": ["api", "chats", "1"]
              },
              "description": "Get a specific chat by ID"
            },
            "response": []
          },
          {
            "name": "Archive Chat",
            "request": {
              "method": "PUT",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{authToken}}"
                }
              ],
              "url": {
                "raw": "{{baseUrl}}/api/chats/1/archive",
                "host": ["{{baseUrl}}"],
                "path": ["api", "chats", "1", "archive"]
              },
              "description": "Archive a chat by ID"
            },
            "response": []
          }
        ],
        "description": "Chat management endpoints"
      },
      {
        "name": "Messages",
        "item": [
          {
            "name": "Send Text Message",
            "request": {
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Authorization",
                  "value": "Bearer {{authToken}}"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"content\": \"Hello, this is a test message.\",\n    \"messageType\": \"TEXT\"\n}"
              },
              "url": {
                "raw": "{{baseUrl}}/api/messages/1/text",
                "host": ["{{baseUrl}}"],
                "path": ["api", "messages", "1", "text"]
              },
              "description": "Send a text message to a chat (chatId = 1)"
            },
            "response": []
          },
          {
            "name": "Send File Message",
            "request": {
              "method": "POST",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{authToken}}"
                }
              ],
              "body": {
                "mode": "formdata",
                "formdata": [
                  {
                    "key": "file",
                    "type": "file",
                    "src": "/path/to/test/file.pdf"
                  }
                ]
              },
              "url": {
                "raw": "{{baseUrl}}/api/messages/1/file",
                "host": ["{{baseUrl}}"],
                "path": ["api", "messages", "1", "file"]
              },
              "description": "Send a file message to a chat (chatId = 1)"
            },
            "response": []
          },
          {
            "name": "Get Chat Messages",
            "request": {
              "method": "GET",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{authToken}}"
                }
              ],
              "url": {
                "raw": "{{baseUrl}}/api/messages/chat/1",
                "host": ["{{baseUrl}}"],
                "path": ["api", "messages", "chat", "1"]
              },
              "description": "Get all messages from a specific chat"
            },
            "response": []
          },
          {
            "name": "Get Chat Messages Pageable",
            "request": {
              "method": "GET",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{authToken}}"
                }
              ],
              "url": {
                "raw": "{{baseUrl}}/api/messages/chat/1/page?page=0&size=10",
                "host": ["{{baseUrl}}"],
                "path": ["api", "messages", "chat", "1", "page"],
                "query": [
                  {
                    "key": "page",
                    "value": "0"
                  },
                  {
                    "key": "size",
                    "value": "10"
                  }
                ]
              },
              "description": "Get paginated messages from a specific chat"
            },
            "response": []
          },
          {
            "name": "Mark Message as Read",
            "request": {
              "method": "PUT",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{authToken}}"
                }
              ],
              "url": {
                "raw": "{{baseUrl}}/api/messages/1/read",
                "host": ["{{baseUrl}}"],
                "path": ["api", "messages", "1", "read"]
              },
              "description": "Mark a message as read by ID"
            },
            "response": []
          }
        ],
        "description": "Message management endpoints"
      }
    ],
    "event": [
      {
        "listen": "prerequest",
        "script": {
          "type": "text/javascript",
          "exec": [
            ""
          ]
        }
      },
      {
        "listen": "test",
        "script": {
          "type": "text/javascript",
          "exec": [
            ""
          ]
        }
      }
    ],
    "variable": [
      {
        "key": "baseUrl",
        "value": "http://localhost:8080",
        "type": "string"
      },
      {
        "key": "authToken",
        "value": "",
        "type": "string"
      }
    ]
  }